//Random Number Generator
        Random rng = new Random();
        
        Scanner input = new Scanner(System.in);
        
        // Getting user name and getting player scores from file
        System.out.println("Hello and Welcome");
        System.out.println("What is your name: ");
        String name = input.nextLine();
        //Opening or Creating the file
        PrintWriter outputStream = null;
        try {
            outputStream = new PrintWriter(new FileOutputStream("scores.txt"));
            outputStream.close();
        } 
        catch(FileNotFoundException e){
            System.out.println("Error opening the file "+e.getMessage());
        }

        //Read file input
        try {
            FileReader fr = new FileReader("scores.txt");
            BufferedReader inputStream = new BufferedReader(fr);
            String line = null;
            while((line=inputStream.readLine())!=null)
                System.out.println(line);
            
            inputStream.close();
            }
        catch(FileNotFoundException e)
                {
                System.out.println("File not found.");
                }
        catch(IOException e) {
                System.out.println("Error reading from file " + "scores.txt");
                }
        
        
        
        //Enemies
        String[] enemies = {"Giant", "Undead Creature", "Ghost", "Demon", "Hellhound", "Gremlin", "Giant Centipede"};
        int enMaxHP = 150;
        int enMaxAtk = 30;
        
        //Player
        int playerHealth = 100;
        int playerMana = 100;
        int playerAttack = 20;
        int playerGunPotency = 80;
        int playerGunAmmo = 3;
        int ammoDropChance = 50;
        int playerHealthPotion = 3;
        int healthPotionHeal = 40;
        int potionDropChance = 10;
        int playerHuntCount = 0;
        
        
        //System
        boolean running = true;
        System.out.println("Hello " + name + ", Welcome to the Hunt" + "\n");
        System.out.println("you will fight continuously against enemies survive as long as you can...");
        
        GAME:
        while(running) {
            System.out.println("-------------------------------------------");
            
            int enemyHealth = rng.nextInt(enMaxHP);
            String enemy = enemies[rng.nextInt(enemies.length)];
            System.out.println("A " + enemy + " approaches!" + "\n");
        
            
            //Battle
            while (enemyHealth > 0) {
                System.out.println("-------------------------------------------");
                System.out.println(enemy + " HP: " + enemyHealth + "\n");
                System.out.println("-------------------------------------------");
                System.out.println("Your HP: " + playerHealth);
                System.out.println("HP Potions: " + playerHealthPotion);
                System.out.println("Ammo: " + playerGunAmmo);
                System.out.println("-------------------------------------------");
                System.out.println("What will you do?");
                System.out.println("1. Attack!");
                System.out.println("2. Use Potion");
                System.out.println("3. Gun");
                System.out.println("4. Run away and Exit");
                
                String action = input.nextLine();
                //user selects 1
                if(action.equals("1")) {
                    int damageDealt = rng.nextInt(playerAttack);
                    int damageTaken = rng.nextInt(enMaxAtk);
                    
                    //battle event
                    enemyHealth -= damageDealt;
                    playerHealth -= damageTaken;
                    
                    System.out.println("-------------------------------------------");
                    System.out.println("You deal " + damageDealt + " damage to " + enemy + "!");
                    System.out.println("You recieve " + damageTaken + " damage!");
                    
                    //health check
                    if (player.playerHealth < 1) {
                        System.out.println("-------------------------------------------");
                        System.out.println("You faint and are unable to continue...");
                        System.out.println("-------------------------------------------");
                        break;
                    }
                    
                }
                //User selects 2
                else if (action.equals("2")) {
                    if(playerHealthPotion > 0) {
                        playerHealth += healthPotionHeal;
                        playerHealthPotion--;
                        System.out.println("You drink a health potion, healing for " + healthPotionHeal + "\n" + "HP: " + playerHealth + "\n" + "Potions: " + playerHealthPotion);
                        
                    }
                    else {
                    System.out.println("You have no potions left.");
                    }
                
                }
                
                //User selects 3
                else if (action.equals("3")) {
                    if(playerGunAmmo > 0) {
                        playerGunAmmo--;
                        int damageDealt = playerGunPotency;
                        int damageTaken = rng.nextInt(enMaxAtk);
                     
                        
                        //battle event
                        enemyHealth -= damageDealt;
                        playerHealth -= damageTaken;
                        
                        System.out.println("-------------------------------------------");
                        System.out.println("You use your gun and hit " + enemy + " for " + damageDealt + "!!!");
                        System.out.println("You recieve " + damageTaken + " damage!");
                        
                        //health check
                        if (playerHealth < 1) {
                            System.out.println("-------------------------------------------");
                            System.out.println("You faint and are unable to continue...");
                            System.out.println("-------------------------------------------");
                            break;
                        }
                        
                        
                    }
                    else {
                            System.out.println("You have no ammo.");
                    }
                }
                
                //User selects 4 and exits game loop
                else if (action.equals("4")) {
                    playerHealth = 0;
                    System.out.println("-------------------------------------------");
                    System.out.println("You run away and end your adventure");
                    break;
                    
                }
                
                else {
                System.out.println("Invalid input");
                }
            }        
            
            
            //Player runs out of health and exits game loop
            if (player.playerHealth < 1) {
                System.out.println("Game Over." + "\n");
                System.out.println("You have hunted " + playerHuntCount + " monsters.");
                break;
            }
            
            System.out.println("-------------------------------------------");
            System.out.println(enemy + " was defeated.");
            System.out.println("HP: " + playerHealth);
            
            //Potion drop
            if (rng.nextInt(100) < potionDropChance) {
                playerHealthPotion++;
                System.out.println("You recieve a potion." + "\n");
                System.out.println("Potions: " + playerHealthPotion);
            }
            
            //Ammo drop
            if (rng.nextInt(100) < ammoDropChance) {
                playerGunAmmo++;
                System.out.println("You receive ammo.");
                System.out.println("Ammo: " + playerGunAmmo);
            }
            
            playerHuntCount++;
        }
    
    //Write player name and score to file
    try {
        outputStream = new PrintWriter(new FileOutputStream("scores.txt", true));
        
        outputStream.println(name + playerHuntCount + ", ");
        outputStream.close();
    } catch(FileNotFoundException e){
        System.out.println("Error opening the file "+ e.getMessage());
    }